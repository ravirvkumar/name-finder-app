<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MongoDB Name Lookup</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 30px;
        }
        input, button {
            padding: 8px;
            margin: 5px 0;
        }
        button {
            cursor: pointer;
        }
        #output, #addResult {
            margin-top: 10px;
            font-weight: bold;
        }
    </style>
</head>
<body>

    <h2>üîç Fetch Names</h2>
    <label>Enter a Name_Value:</label><br>
    <input type="number" id="nameValueInput" placeholder="e.g. 10"><br>

    <label>Optional: Starts with letter</label><br>
    <input type="text" id="startsWithInput" placeholder="e.g. A"><br>

    <button onclick="fetchNames()">Fetch Names</button>

    <div id="output">Waiting for input...</div>

    <hr>

    <h2>‚ûï Add a New Name</h2>
    <label>Enter a Name:</label><br>
    <input type="text" id="newNameInput" placeholder="e.g. John"><br>

    <button onclick="addName()">Add Name</button>

    <div id="addResult"></div>

    <script>
        // ‚úÖ Fetch names from backend
        function fetchNames() {
            const value = document.getElementById("nameValueInput").value;
            const startsWith = document.getElementById("startsWithInput").value.trim();

            if (!value) {
                document.getElementById("output").innerHTML = "‚ùå Please enter a number.";
                return;
            }

            let url = `/fetch-names?value=${value}`;
            if (startsWith) {
                url += `&startsWith=${startsWith}`;
            }

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    if (data.length && data[0] !== "No names found!") {
                        document.getElementById("output").innerHTML = "‚úÖ Matching Names:<br>" + data.join("<br>");
                    } else {
                        document.getElementById("output").innerHTML = "‚ö†Ô∏è No names found!";
                    }
                })
                .catch(error => {
                    console.error("‚ùå Error fetching data:", error);
                    document.getElementById("output").innerHTML = "‚ùå Server error while fetching names.";
                });
        }

        // ‚úÖ Add a new name to database
        function addName() {
            const name = document.getElementById("newNameInput").value.trim();
            if (!name) {
                document.getElementById("addResult").innerHTML = "‚ùå Please enter a valid name.";
                return;
            }

            fetch("/add-name", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ name })
            })
            .then(res => res.json())
            .then(data => {
                if (data.message === "Already exists") {
                    document.getElementById("addResult").innerHTML =
                        `‚ö†Ô∏è Name already exists: <strong>${data.name}</strong> (Value: ${data.value})`;
                } else if (data.message === "Added") {
                    document.getElementById("addResult").innerHTML =
                        `‚úÖ Name added successfully: <strong>${data.name}</strong> (Value: ${data.value})`;
                } else {
                    document.getElementById("addResult").innerHTML = "‚ùå Unexpected response from server.";
                }
            })
            .catch(error => {
                console.error("‚ùå Error adding name:", error);
                document.getElementById("addResult").innerHTML = "‚ùå Server error while adding name.";
            });
        }
    </script>

</body>
</html>
